name: Rockchip

on:
  repository_dispatch:
    types: [Build-OpenWrts]  # 监听来自 ActionTrigger 的自定义事件

env:
  OPNAME: 'NanoPi R4S'
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  FEEDS_CONF: feeds.conf.default
  CONFIG_FILE: configs/Rockchip.config
  SYS_CONF_SH: configure.sh
  PACKS: package.sh
  EXTEND_DRIVER: true
  UPLOAD_RELEASE: true
  TZ: Asia/Shanghai
  WXPUSHER_URL: 'https://wxpusher.zjiecode.com/api/send/message'
  WXPUSHER_APP_TOKEN: ${{ secrets.WXPUSHER_APP_TOKEN }}
  WXPUSHER_USER_IDS: ${{ secrets.WXPUSHER_USER_IDS }}  # 存储你的用户ID

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* 
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install $(curl -fsSL https://raw.githubusercontent.com/bigbugcc/openwrts/master/openwrt-env)
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        mkdir -p /mnt/workdir

    - name: Clone source code
      working-directory: /mnt/workdir
      run: |
        git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt
        ln -sf /mnt/workdir/openwrt $GITHUB_WORKSPACE/openwrt

    - name: Load custom feeds and config
      run: |
        [ -e $FEEDS_CONF ] && mv $FEEDS_CONF openwrt/feeds.conf.default
        chmod +x $SYS_CONF_SH
        cd openwrt
        $GITHUB_WORKSPACE/$SYS_CONF_SH

    - name: Update and install feeds
      run: cd openwrt && ./scripts/feeds update -a && ./scripts/feeds install -a

    - name: Load configuration
      run: |
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        chmod +x $PACKS
        cd openwrt
        $GITHUB_WORKSPACE/$PACKS
        if [ "$EXTEND_DRIVER" == "true" ]; then
          cat configs/Driver.config >> .config
        fi

    - name: Download packages
      run: |
        cd openwrt
        make download -j$(nproc)
        find dl -size -1024c -exec rm -f {} \;

    - name: Compile the firmware
      run: |
        cd openwrt
        make -j$(nproc) V=s || make -j4 V=s

    - name: Generate release files
      run: |
        cd openwrt/bin/targets/*/*
        KERNEL_VERSION=$(cat *.manifest | grep ^kernel | cut -d- -f2 | tr -d ' ')
        echo "KERNEL_VERSION=$KERNEL_VERSION" >> $GITHUB_ENV
        echo "Kernel version: $KERNEL_VERSION"
        rm -rf packages
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV

    - name: Send notification to wxPusher
      if: env.KERNEL_VERSION != ''
      run: |
        curl -X POST ${{ env.WXPUSHER_URL }} \
          -d "app_token=${{ secrets.WXPUSHER_APP_TOKEN }}" \
          -d "content=内核版本: ${{ env.KERNEL_VERSION }}" \
          -d "summary=OpenWrt 编译完成" \
          -d "uids=${{ secrets.WXPUSHER_USER_IDS }}"

    - name: Generate release tag and body
      run: |
        release_tag=$(date +"%Y.%m.%d-%H%M%S")
        echo "release_tag=$release_tag" >> $GITHUB_ENV
        echo "![](https://img.shields.io/github/downloads/${{ github.repository }}/$release_tag/total?style=flat-square)" > release.txt
        echo "- 内核版本: ${{ env.KERNEL_VERSION }}" >> release.txt
        echo "- 编译完成时间: $(date +"%Y%m%d%H%M") " >> release.txt

    - name: Upload firmware to release
      uses: softprops/action-gh-release@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        name: ${{ env.OPNAME }}
        tag_name: ${{ env.release_tag }}
        body_path: release.txt
        files: ${{ env.FIRMWARE }}/*
